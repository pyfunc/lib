[build-system]
requires = [
    # Keep this aligned with the project dependencies.
    "setuptools >= 61.0",
    "incremental",
    "wheel",
    "setuptools-git-versioning"
]
#build-backend = "setuptools.build_meta"
#backend-path = ["./src"]  # See _build_meta.py
#build-backend = "_build_meta:build_meta"
build-backend = "setuptools.build_meta"

[tool.setuptools-git-versioning]
enabled = true

[tool.incremental]

[project.urls]
homepage = "https://www.pyfunc.com"
documentation = "https://docs.pyfunc.com"
repository = "https://github.com/pyfunc/lib"
changelog = "https://github.com/pyfunc/lib/releases"
wiki = "https://github.com/pyfunc/lib/wiki"
issue = "https://github.com/pyfunc/lib/issues/new"

[project]
name = "pyfunc2"
#version = "0.1.21"
dynamic = ["version"]
#dynamic = ["dependencies"]
description = "libs for cameramonit, ocr, fin-officer, cfo, and other projects"
readme.content-type = "text/markdown"
readme.file = "README.md"
keywords = ["test", "framework", "cameramonit", "fin-officer", "console", "terminal", "time"]
license = "Apache-2.0"
requires-python = ">=3.7"
dependencies = [
    "stringcase ~=1.2.0",
    "certifi >=2024.7.4",
    "charset-normalizer >=3.3.2",
    "idna >=3.7",
    "iniconfig >=2.0.0",
    "packaging >=24.1",
    "pluggy >=1.5.0",
    "pytest >=8.2.2",
    "requests >=2.32.3",
    "urllib3 >=2.2.2"
]

authors = [
    { name = "Tom Sapletta", email = "tom@sapletta.com" },
]
maintainers = [
    { name = "pyfunc developers", email = "info@softreck.dev" }
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: MacOS X",
    "Environment :: Other Environment",
    "Environment :: Win32 (MS Windows)",
    "Environment :: X11 Applications",
    "Framework :: IPython",
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Other Audience",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft",
    "Operating System :: Microsoft :: MS-DOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: BSD",
    "Operating System :: POSIX :: BSD :: FreeBSD",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX :: SunOS/Solaris",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: Implementation :: IronPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Unix Shell",
    "Topic :: Desktop Environment",
    "Topic :: Education :: Computer Aided Instruction (CAI)",
    "Topic :: Education :: Testing",
    "Topic :: Office/Business",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Pre-processors",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Logging",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
    "Topic :: Utilities"
]


[tool.pylint]
max-line-length = 88
disable = [
    "C0103", # (invalid-name)
    "C0113", # (missing-module-docstring)
    "C0114", # (missing-class-docstring)
    "C0115", # (missing-function-docstring)
    "R0903", # (too-few-public-methods)
    "R0913", # (too-many-arguments)
    "W0105", # (pointless-string-statement)
]

[tool.flake8]
max_line_length = 99
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    ".asv",
    ".tox",
    ".ipynb_checkpoints"
]

[tool.yapf]
spaces_before_comment = [15, 20]
arithmetic_precedence_indication = true
allow_split_before_dict_value = false
coalesce_brackets = true
column_limit = 99
each_dict_entry_on_separate_line = false
space_between_ending_comma_and_closing_bracket = false
split_before_named_assigns = false
split_before_closing_bracket = false
blank_line_before_nested_class_or_def = false

[tool.isort]
line_length = 99
multi_line_output = 4
profile = "black"
src_paths = ["src/pyfunc2", "test"]
honor_noqa = true

[tool.pytest.ini_options]
addopts = "--doctest-modules"
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS"
minversion = "0.1.21"
testpaths = ["tests"]

#[tool.coverage.run]
#branch = true
#include = ["pyfunc/*"]
#relative_files = true
#disable_warnings = ["include-ignored"]
#source = ["src"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
show_contexts = true
skip_covered = false

[tool.coverage.paths]
source = [
    "src",
    ".tox*/*/lib/python*/site-packages",
    ".tox*/pypy*/site-packages",
    ".tox*\\*\\Lib\\site-packages",
    "*/src",
    "*\\src"
]

[tool.black]
line-length = 120

#[tool.ruff]
#src = ["src", "tests"]

#[tool.ruff.isort]
#known-first-party = ["pyproject_hooks", "tests"]

[tool.mypy]
python_version = "0.1.21"
show_error_codes = true
strict = true
overrides = [
    { module = ["virtualenv.*"], ignore_missing_imports = true }
]

[tool.hatch.version]
path = "src/pyfunc2/__init__.py"
pattern = "__version__ = Version\\(\"pyfunc2\", (?P<major>\\d+), (?P<minor>\\d+), (?P<patch>\\d+)\\)"

#[tool.setuptools.dynamic]
#version = { attr = "pyfunc2.VERSION" }
#readme = { file = ["README.md", "TODO.md"] }


[tool.hatch.build.targets.wheel]
packages = ["pyfunc2"]